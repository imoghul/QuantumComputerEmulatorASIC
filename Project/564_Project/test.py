
Q=3
M=4

B = """0.2027122 0.4359841
0.3171791 0.1287300
0.0178759 0.4045434
0.1516617 0.3350157
0.0713507 0.2994745
0.3659403 0.1220443
0.2085669 0.2172124
0.1333169 0.0200548"""

C = """0.0116353 0.0965346
0.1597577 -0.3053971
-0.3245993 0.2770726
-0.3531333 -0.0746144
0.1836513 -0.4710737
-0.1164292 -0.0001723
-0.4011544 -0.1813029
-0.1818461 -0.2515826"""

A = """0.2254252 0.2629257
-0.1614096 0.0830271
0.4957957 -0.3554669
-0.1112880 0.0943550
0.5061040 -0.0772410
-0.0159617 -0.1860240
0.1362730 0.0733015
0.3406174 0.1292989
0.3836989 0.1032889
-0.3060421 0.1591708
0.1708747 -0.1241356
0.1990897 0.4651069
-0.4439938 0.2078280
0.2871588 -0.0275018
-0.2862956 -0.0029833
-0.1253880 -0.0361214
0.3697174 0.3146081
-0.1769631 -0.0016124
-0.0042982 0.2065840
0.4336784 -0.2594679
-0.0054387 -0.2294256
-0.1061321 0.3200675
0.3842551 0.2314694
-0.2453110 0.0844742
0.3520582 0.1990610
0.2325299 -0.0724287
0.0130713 0.0339724
0.0102303 -0.0094169
0.1518986 0.3660633
-0.4880794 0.0533465
-0.1361888 -0.5703899
-0.1672100 -0.0748413
0.0496627 0.0134196
0.4372877 0.2115681
0.1522424 -0.0438998
-0.2073610 0.1716962
-0.1798454 0.2675000
-0.1284044 0.5440355
0.1589167 0.3701641
0.2575288 -0.1372184
0.2213093 0.3868386
0.3223280 -0.2731392
-0.3622083 -0.3278142
-0.1984765 -0.1757722
-0.1764851 0.0137581
0.1654604 -0.1388880
-0.1492421 0.1975485
-0.0009709 0.4178863
0.3222380 0.0776297
0.2263450 0.3124606
-0.0424343 0.3419379
-0.3529592 -0.0330915
0.2468545 -0.1444441
0.2465371 -0.2557770
-0.1151782 0.1983299
-0.3126202 -0.3722088
0.0491047 0.0968364
0.4373407 0.0530012
0.0747004 0.3887640
0.4326787 0.1072571
-0.0113327 -0.2658228
0.1882906 -0.0797755
-0.1923547 -0.1891684
0.4870764 0.1267549
0.0053624 0.2473005
0.1591408 0.1604705
0.5812136 -0.0755891
-0.0349036 0.2713468
0.3645198 -0.0480534
0.2643928 0.3945008
0.1910567 -0.0881324
0.2111728 0.1406578
0.1294117 0.1993594
0.0014120 -0.2151865
0.0747163 0.2841315
-0.1140864 0.1957587
0.5646686 -0.0196467
-0.1763565 -0.3855192
-0.2631909 -0.2702226
-0.1579605 -0.3055262
0.2347947 0.1591992
-0.0474355 -0.2735859
-0.2759485 0.4595766
0.5319522 -0.1177962
0.0561449 -0.0580734
0.2627395 0.3513638
0.0541108 -0.1653489
-0.0935492 0.1420820
0.3273376 0.1028732
0.1117939 0.4734499
-0.2261544 0.0881717
0.0152778 0.0581961
-0.0437950 -0.0569666
-0.2730290 -0.0932267
-0.2606520 -0.2825282
0.4629480 0.3641326
0.3544363 0.1673660
0.0273740 0.4730521
-0.2825432 -0.0423886
-0.2128048 -0.2616015
0.2960827 -0.0786922
0.2125594 0.1156509
0.0437617 0.3900115
-0.2495644 -0.2403470
0.3158691 0.1715167
-0.4061550 -0.3335618
-0.1190537 0.1067695
-0.3539054 0.3727107
-0.1697837 -0.0767532
0.1207058 -0.0091985
0.1012646 0.3241736
0.3740670 -0.0143679
0.0792455 0.4384932
0.1697193 -0.0605569
0.2065075 0.0754284
0.2176404 -0.3260091
-0.1187591 -0.1433800
-0.3725698 -0.2684230
0.4911104 0.1777552
0.1753995 -0.1338507
0.2981928 0.3373629
0.2333011 0.0347848
0.2609983 0.0151517
0.0632505 0.1944551
-0.4497318 0.4103613
0.1371111 -0.1270612
-0.2854659 0.1084723
-0.3589934 0.0610946
0.0416526 0.0591058
0.1747747 0.0349353
0.2855936 0.4770437
-0.5120302 0.0513001
0.3323813 0.1248238
-0.1401258 0.3261364
0.1661584 0.2018252
0.2410470 -0.1027603
0.3540231 0.1244539
-0.0974544 -0.1357354
-0.2265461 0.3978648
-0.0752352 0.4183392
-0.0758957 0.2199412
0.2912254 0.0458066
-0.1343908 -0.0071851
-0.4580871 0.2682700
0.4187759 0.2485184
0.0889500 0.3199515
0.0568420 -0.4015521
-0.0146421 0.2544443
-0.1628774 0.1897983
-0.4245971 -0.0114801
0.3315592 0.1806182
-0.0041633 0.1939439
0.1337108 0.1024510
0.0203331 0.3535076
0.0249422 0.2538862
-0.0658605 -0.3597896
-0.1115856 -0.3529631
0.2379599 -0.0603569
0.5192052 -0.3588813
-0.1311099 0.1857843
0.0768880 0.1280188
0.5656536 -0.1117106
-0.0482455 0.2407216
0.2875512 0.0362761
-0.3379889 0.0036813
0.2234435 -0.2639344
0.1466925 0.3502664
0.1716499 -0.3057332
0.4427799 0.1614592
-0.1577907 0.3191430
0.0835596 -0.1107189
0.0442173 -0.2282215
0.2715960 0.3258218
0.3275670 -0.1234281
-0.2338145 -0.1048467
0.0860629 -0.4497977
0.3158286 0.4295055
0.0256185 -0.3963489
-0.2015270 0.0009535
0.0010558 -0.0134272
0.3609223 -0.4228498
-0.1615147 -0.2296897
-0.1134867 -0.1105407
0.2902062 0.1414349
0.1299249 0.2071575
0.2961273 -0.0040303
0.3609753 0.0354683
0.3381520 -0.3212676
-0.0205416 -0.1286763
-0.1494157 0.4506824
-0.3685923 0.0423684
-0.3256242 0.1314197
0.3089910 0.0166766
0.1664864 0.2211447
-0.2283269 0.4371634
0.0964914 0.2571332
-0.1929330 -0.1567258
0.3718537 0.0614543
0.0156532 -0.3565518
0.3840841 -0.1738330
0.2538541 0.0278706
0.3780841 0.2372609
-0.1432653 0.0539219
-0.0409669 -0.0334409
-0.0941197 0.1677680
-0.1155674 -0.3044092
-0.2948387 -0.0048954
-0.1221091 0.6814851
0.0543258 0.2824220
0.1493481 0.2632397
0.4060433 -0.0962719
-0.1527604 -0.2579514
0.5315200 -0.1149998
0.4130315 -0.1458788
-0.0592420 0.1160806
0.2386668 -0.0105874
0.2600752 0.3404682
-0.1797591 -0.1525081
0.0544159 0.1127674
0.5335729 0.0272350
0.1578731 0.1019323
-0.1742994 -0.4027478
0.4733410 -0.0325856
0.0321604 0.0755178
0.3096777 0.3396401
0.1581885 0.0977419
-0.2859474 0.0876757
0.0420080 -0.4100450
-0.1894882 0.1369748
-0.0998643 0.2076392
-0.0654982 0.5023976
-0.0622833 -0.3556479
0.0062348 0.2269019
0.5843322 -0.0219646
0.2669868 -0.3475131
0.1510634 0.1808122
-0.0586750 0.2408234
-0.0959887 0.3978837
0.1859429 -0.2928681
-0.0719902 -0.0670568
0.2853173 0.1923483
-0.0895946 -0.0980823
0.2371863 0.2777427
0.0523422 0.3977502
0.2659616 -0.3617972
-0.2232253 0.3074242
-0.3459363 0.1254179
-0.2937431 0.0441248
0.2841149 0.3329451
-0.3647099 -0.2231604
0.3450998 -0.0975346
-0.3972130 0.0481779
-0.4341059 0.2529216
0.0356530 -0.0352583
-0.1368475 -0.1113798
0.2155943 0.0660380"""


def multiply(A, B):
    Areal,Aimag = A.split(' ')
    Areal = float(Areal)
    Aimag = float(Aimag)
    Breal,Bimag = B.split(' ')
    Breal = float(Breal)
    Bimag = float(Bimag)
    return(Areal*Breal - Aimag*Bimag , Areal*Bimag + Aimag*Breal)

def convert2D(rows,cols,inp):
    list_of_lists = []
    for row in range(rows):
        inner_list = []
        for col in range(cols):
            inner_list.append(inp[col+row*cols])
        list_of_lists.append(inner_list)
    return list_of_lists
def matmultiply(a, b):
    c = []
    for i in range(0,len(a)):
        temp=[]
        for j in range(0,len(b[0])):
            s = [0,0]
            for k in range(0,len(a[0])):
                product = multiply(a[i][k],b[k][j])
                s[0]+=product[0]
                s[1]+=product[1]
            s = [str(s[0]),str(s[1])]
            temp.append(' '.join(s))
        c.append(temp)
    
    return c

# Asplit = A.split('\n')
# lenAsplit = int(len(Asplit)/2)
# A1 = Asplit[:lenAsplit]
# A2 = Asplit[lenAsplit:]

# A1r = 1<<Q
# A1c = 1<<M
# A2r = A1c
# A2c = A1r

# A1 = convert2D(A1r,A1c,A1)
# A2 = convert2D(A2r,A2c,A2)
# B = convert2D(1<<Q, 1,B.split("\n"))



# print(matmultiply(matmultiply(A1,A2),B))



print(matmultiply(convert2D(8,1,B.split("\n")),convert2D(8,1,C.split("\n"))))